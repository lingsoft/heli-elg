plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.4.1"
    id('com.google.cloud.tools.jib') version '3.1.4'
}

version = "1.3"
group = "eu.european-language-grid"

repositories {
    mavenCentral()
    //---- Added ELG GitLab maven repository for snapshot version of lt-service-micronaut
    maven { url "https://gitlab.com/api/v4/groups/european-language-grid/-/packages/maven/" }
    flatDir { dirs 'local-lib' }
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("jakarta.annotation:jakarta.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-validation")
    implementation("eu.european-language-grid:lt-service-micronaut:1.1.1-SNAPSHOT")

    implementation(":HeLI")
}


application {
    mainClass.set("eu.elg.heli.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

dockerfileNative {
    // default alpine base image is not multiarch
    baseImage('debian:10-slim')
}

graalvmNative {
    toolchainDetection = false
    binaries {
        main {
            buildArgs.add("--initialize-at-build-time=eu.elg.heli.Application,eu.elg.heli.impl")
        }
    }
}
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("eu.elg.heli.*")
    }
}


